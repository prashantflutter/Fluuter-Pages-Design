import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:flutter_typeahead/flutter_typeahead.dart';
import 'package:shared_preferences/shared_preferences.dart';

class MySharedPreferencesTypeAheadExample extends StatefulWidget {
  @override
  _MySharedPreferencesTypeAheadExampleState createState() =>
      _MySharedPreferencesTypeAheadExampleState();
}

class _MySharedPreferencesTypeAheadExampleState
    extends State<MySharedPreferencesTypeAheadExample> {
  final TextEditingController itemController = TextEditingController();
  List<String> myList = [];

  @override
  void initState() {
    super.initState();
    loadListFromSharedPreferences();
  }

  Future<void> loadListFromSharedPreferences() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    String? myListJson = prefs.getString('myList');
    if (myListJson != null) {
      List<String> loadedList = json.decode(myListJson).cast<String>();
      setState(() {
        myList = loadedList;
      });
    }
  }

  Future<void> saveListToSharedPreferences(List<String> list) async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    String myListJson = json.encode(list);
    prefs.setString('myList', myListJson);
  }

  void addItemToList(String newItem) {
    if (newItem.isNotEmpty) {
      setState(() {
        myList.add(newItem);
      });
      saveListToSharedPreferences(myList);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('SharedPreferences TypeAhead Example'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            TypeAheadField<String>(
              builder: (context, controller, focusNode) {
                return TextField(
                  controller: itemController,
                  focusNode: focusNode,
                  autofocus: true,
                  decoration: InputDecoration(
                      border: OutlineInputBorder(),
                      labelText: 'Email'
                  ),
                );
              },
              suggestionsCallback: (pattern) async {
                // Return filtered suggestions based on the user's input pattern
                return myList
                    .where((item) => item.toLowerCase().contains(pattern.toLowerCase()))
                    .toList();
              },
              itemBuilder: (context, suggestion) {
                return ListTile(
                  title: Text(suggestion),
                );
              },
              onSelected: (String value) {
                itemController.text = value;
                // Optionally, add the selected suggestion to the list
                addItemToList(value);
              },
            ),
            SizedBox(height: 16),
            Text('My List:'),
            Expanded(
              child: ListView.builder(
                itemCount: myList.length,
                itemBuilder: (context, index) {
                  return ListTile(
                    title: Text(myList[index]),
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}

void main() {
  runApp(MaterialApp(
    home: MySharedPreferencesTypeAheadExample(),
  ));
}
